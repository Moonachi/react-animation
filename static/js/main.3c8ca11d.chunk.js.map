{"version":3,"sources":["App.tsx","index.tsx","theme.ts"],"names":["Wrapper","styled","div","Grid","Box","motion","Overlay","SwitchButton","button","Circle","overlay","hidden","backgroundColor","visible","exit","App","useState","id","setId","clicked","setClicked","map","item","idx","split","originX","originY","onClick","layoutId","style","Number","whileHover","scale","AnimatePresence","variants","initial","animate","width","height","prev","whileFocus","color","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"2OAIMA,EAAUC,IAAOC,IAAV,sKASPC,EAAOF,IAAOC,IAAV,sHAOJE,EAAMH,YAAOI,IAAOH,IAAdD,CAAH,wQAUHK,EAAUL,YAAOI,IAAOH,IAAdD,CAAH,0JASPM,EAAeN,YAAOI,IAAOG,OAAdP,CAAH,gKAUZQ,EAASR,YAAOI,IAAOH,IAAdD,CAAH,2HAONS,EAAU,CACdC,OAAQ,CAAEC,gBAAiB,oBAC3BC,QAAS,CAAED,gBAAiB,sBAC5BE,KAAM,CAAEF,gBAAiB,qBA4DZG,I,EAAAA,EAzDf,WACE,MAAoBC,mBAAwB,MAA5C,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,OACE,eAACpB,EAAD,WACE,cAACG,EAAD,UACG,CAAC,QAAS,QAAS,QAAS,SAASkB,KAAI,SAACC,EAAMC,GAC/C,MAA6BD,EAAKE,MAAM,KAAxC,mBAASC,EAAT,KAAkBC,EAAlB,KACA,OACE,eAACtB,EAAD,CACEuB,QAAS,kBAAMT,EAAMI,IAErBM,SAAUN,EACVO,MAAO,CAAEJ,QAASK,OAAOL,GAAUC,QAASI,OAAOJ,IACnDK,WAAY,CAAEC,MAAO,KALvB,UAOW,IAART,IAAcJ,GAAW,cAACV,EAAD,CAAQmB,SAAS,WAClC,IAARL,GAAaJ,GAAW,cAACV,EAAD,CAAQmB,SAAS,aANrCN,QAWb,cAACW,EAAA,EAAD,UACGhB,EACC,cAACX,EAAD,CACE4B,SAAUxB,EACViB,QAAS,kBAAMT,EAAM,OACrBiB,QAAQ,SACRC,QAAQ,UACRtB,KAAK,OALP,SAOE,cAACV,EAAD,CACEwB,SAAUX,EACVY,MAAO,CACLQ,MAAO,IACPC,OAAQ,IACR1B,gBAAiB,wBAIrB,OAEN,cAACL,EAAD,CACEoB,QAAS,kBAAMP,GAAW,SAAAmB,GAAI,OAAKA,MACnCC,WACErB,EACI,CAAEa,MAAO,IAAKS,MAAO,UACrB,CAAET,MAAO,EAAGS,MAAO,QAL3B,wBChGAC,EAAcC,YAAH,o9CAiEjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAeC,MC3EkB,GD2EjC,UACE,cAACL,EAAD,IACA,cAAC,EAAD,WAINM,SAASC,eAAe,W","file":"static/js/main.3c8ca11d.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useState } from \"react\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 50vw;\n  gap: 10px;\n`;\n\nconst Box = styled(motion.div)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(238, 122, 247, 0.9);\n  border-radius: 20px;\n  height: 250px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n`;\n\nconst Overlay = styled(motion.div)`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SwitchButton = styled(motion.button)`\n  display: block;\n  width: 100px;\n  height: 40px;\n  font-size: 1.15rem;\n  border-radius: 8px;\n  border: none;\n  color: blue;\n`;\n\nconst Circle = styled(motion.div)`\n  background-color: rgb(255, 255, 255);\n  height: 5vw;\n  width: 5vw;\n  border-radius: 50%;\n`;\n\nconst overlay = {\n  hidden: { backgroundColor: \"rgba(0, 0, 0, 0)\" },\n  visible: { backgroundColor: \"rgba(0, 0, 0, 0.5)\" },\n  exit: { backgroundColor: \"rgba(0, 0, 0, 0)\" }\n};\n\nfunction App() {\n  const [id, setId] = useState<null | string>(null);\n  const [clicked, setClicked] = useState(false);\n\n  return (\n    <Wrapper>\n      <Grid>\n        {[\"1,1,1\", \"2,0,1\", \"3,1,0\", \"4,0,0\"].map((item, idx) => {\n          const [, originX, originY] = item.split(\",\");\n          return (\n            <Box\n              onClick={() => setId(item)}\n              key={item}\n              layoutId={item}\n              style={{ originX: Number(originX), originY: Number(originY) }}\n              whileHover={{ scale: 1.2 }}\n            >\n              {idx === 1 && !clicked && <Circle layoutId=\"circle\" />}\n              {idx === 2 && clicked && <Circle layoutId=\"circle\" />}\n            </Box>\n          );\n        })}\n      </Grid>\n      <AnimatePresence>\n        {id ? (\n          <Overlay\n            variants={overlay}\n            onClick={() => setId(null)}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n          >\n            <Box\n              layoutId={id}\n              style={{\n                width: 400,\n                height: 200,\n                backgroundColor: \"rgb(255,255,255)\"\n              }}\n            />\n          </Overlay>\n        ) : null}\n      </AnimatePresence>\n      <SwitchButton\n        onClick={() => setClicked(prev => !prev)}\n        whileFocus={\n          clicked\n            ? { scale: 1.2, color: \"orange\" }\n            : { scale: 1, color: \"blue\" }\n        }\n      >\n        Switch\n      </SwitchButton>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:black;\n  line-height: 1.2;\n  \n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {};\n"],"sourceRoot":""}